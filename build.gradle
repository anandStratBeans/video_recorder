apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        // Add Google's Maven repository (if it's not there already).
        google()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.android.tools.build:gradle:4.1.3'
    }
}

group = 'io.github.memfis19'
version = '0.3.7'

ext {
    PUBLISH_GROUP_ID = 'io.github.memfis19'
    PUBLISH_ARTIFACT_ID = 'annca'
    PUBLISH_VERSION = '0.3.7'
    PUBLISH_VERSION_CODE = 11
    SUPPORT_VERSION = "30.0.3"
    TARGET_SDK = 32
    MIN_SDK = 21
    BUILD_TOOLS = "30.0.3"
}

android {
    compileSdkVersion TARGET_SDK
    buildToolsVersion BUILD_TOOLS

    defaultConfig {
        minSdkVersion MIN_SDK
        targetSdkVersion TARGET_SDK
        versionCode PUBLISH_VERSION_CODE
        versionName PUBLISH_VERSION
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateSourcesJar
    archives generateJavadocsJar
}



bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    configurations = ['archives']
    pkg {
        repo = 'io.github.memfis19'
        name = 'annca'
        userOrg = 'm-e-m-f-i-s'
        desc = 'Android solution to simplify work with different camera apis.'
        licenses = ['MIT']
        labels = ['android', 'camera', 'photo', 'video']
        websiteUrl = 'https://github.com/memfis19/Annca'
        issueTrackerUrl = 'https://github.com/memfis19/Annca/issues'
        vcsUrl = 'https://github.com/memfis19/Annca.git'
        version {
            name = PUBLISH_VERSION
            vcsTag = PUBLISH_VERSION
            desc = 'Minor fixes.'
            released = new Date()

        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    androidTestImplementation "com.android.support:support-annotations:$SUPPORT_VERSION"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.github.skydoves:balloon:1.4.7"
    //implementation 'it.sephiroth.android.library.targettooltip:target-tooltip-library:+'
//    implementation 'com.tomergoldst.android:tooltips:1.1.1'
}
